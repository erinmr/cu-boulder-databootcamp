fig = go.Figure(data=[go.Sankey(
node = dict(pad = 15,
thickness = 20,
line = dict(color = "black", width = 1),
label = ["Open Access Papers", "Open Access Data", "Item 2", "Item 3", "Item 4", "Item 6"],
color = "cyan"
),
# indices correspond to labels, eg Item 0 = 0,  Item 1 = 1, Item 2 = 2, ect...
link = dict(source = [0, 1, 0, 2, 3, 3],
target = [2, 3, 3, 4, 4, 5],
value  = [10, 5, 3, 8, 6, 2],
color='pink',
))])
fig.update_layout(title_text="Sankey Diagram", font_size=12)
fig.show()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Read in CUBoulderOAFund2013_2017
CUBoulderOAFund2013_2017 <- data.frame(read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAFund2013_2017.csv'))
colnames(CUBoulderOAFund2013_2017)
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
Paid.AmountNum <- as.numeric(Paid.Amountst)
#Paid.AmountNum
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
Total.Paid
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
totaloa2013_2017
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAFund2013_2017.csv
CUBoulderOAFund2013_2017 <- data.frame(read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAFund2013_2017.csv'))
# Explore column headers by printing all column names
summary(CUBoulderOAFund2013_2017)
# Remove the $ and , from the Paid.Amount column
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amount character string into a number
Paid.AmountNum <- as.numeric(Paid.Amountst)
#Paid.AmountNum
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
Total.Paid
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
totaloa2013_2017
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAFund2013_2017.csv
CUBoulderOAFund2013_2017 <- data.frame(read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAFund2013_2017.csv'))
# Explore data by printing a summary of the spreadsheet. This tells us there are six variables, 116 rows and all variables are character strings
summary(CUBoulderOAFund2013_2017)
?print
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
Print(Total.Paid)
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
print(Total.Paid)
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
totaloa2013_2017
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
print("$",Total.Paid)
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
dollar <- "$"
print(dollar,Total.Paid)
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
print(Total.Paid)
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
totaloa2013_2017
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
cat("$",Total.Paid)
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
totaloa2013_2017
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
cat("$",Total.Paid," equals finding 2 From 2013 to 2017, the Libraries OA Fund funded author fees totaling $163,522.40 ")
# Each row represents a journal article, so counting the rows with nrow should give the total number of journal articles
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
cat(totaloa2013_2017, "matches the 116 journal articles published by CU Boulder authors in full OA journals from finding 2")
# For Finding 1 we need to sum the column Paid.Amount
# First we must convert the column from character to numeric class
# Special characters need to be removed. Remove the $ and , from the Paid.Amount column and assign new variable, Paid.Amountst
Paid.Amountst <- stringr::str_remove_all(CUBoulderOAFund2013_2017$Paid.Amount,"[$,]")
# Convert the Paid.Amountst character string into a number using as.numeric and assign to a new variable Paid.AmountNum
Paid.AmountNum <- as.numeric(Paid.Amountst)
# Sum the entire Paid.AmountNum column. There are some fields, so we set na.rm to True. Assign the sum to a new variable called Total.Paid
Total.Paid <- sum(Paid.AmountNum, na.rm = TRUE)
# Print Total.Paid
cat("$",Total.Paid," equals finding 2 From 2013 to 2017, the Libraries OA Fund funded author fees totaling $163,522.40.")
# Each row represents a journal article, so counting the rows with nrow should give the total number of journal articles
totaloa2013_2017 <- nrow(CUBoulderOAFund2013_2017)
cat(totaloa2013_2017, "matches the 116 journal articles published by CU Boulder authors in full OA journals from finding 2")
library(tidyverse)
# Read in CUBoulderOAFund2013_2017 and review the data
data <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderPublishedData2014_2017.csv')
colnames(data)
summary(data)
#Number of citations in 2014
data14 <- nrow(filter(data, Year == '2014'))
data14
#Number of citations in 2017
data17 <- nrow(filter(data, Year == '2017'))
data17
#Number of citations with a DOI in 2017
doi17a <- filter(data, Year == '2017')
doi17b <-nrow(filter(doi17a, DOI...yes.or.no =='Yes'))
doi17b
library(tidyverse)
# Read in CUBoulderOAFund2013_2017 and review the data. There are 7 variables and 87 rows. All variables are character strings
data <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderPublishedData2014_2017.csv')
colnames(data)
summary(data)
#Identify the number of datasets in 2014 by filtering data for Year equal to 2014, counting the rows with nrow which equal number of datasets in 2014. Assign the number to a variable data14
data14 <- nrow(filter(data, Year == '2014'))
#Check data14 is correct
#data14
#Repeat process for identifying the number of datasets in 2017 as above for 2014.
data17 <- nrow(filter(data, Year == '2017'))
#Check data17 is correct
#data17
#Number of datasets with a DOI in 2017 is found by filtering the table to just datasets from 2017 and assigning that to a variable, doi17a
doi17a <- filter(data, Year == '2017')
#doi17a is then filtered again for the variable DOI...yes.or.no equal to yes and nrow is used to count the resulting filtered rows.
doi17b <-nrow(filter(doi17a, DOI...yes.or.no =='Yes'))
#check doi17b is correct
#doi17b
cat("Published datasets became a reportable scholarly activity in the annual Faculty Report of Professional Activities in 2014, and faculty reported", data17, "data sets in 2017 (up from", data14, "in 2014) with", doi17b," of these citations including Digital Object Identifiers (DOIs).")
#Identify the number of datasets in 2014 by filtering data for Year equal to 2014, counting the rows with nrow which equal number of datasets in 2014. Assign the number to a variable data14
data14 <- nrow(filter(data, Year == '2014'))
#Check data14 is correct
#data14
#Repeat process for identifying the number of datasets in 2017 as above for 2014.
data17 <- nrow(filter(data, Year == '2017'))
#Check data17 is correct
#data17
#Number of datasets with a DOI in 2017 is found by filtering the table to just datasets from 2017 and assigning that to a variable, doi17a
doi17a <- filter(data, Year == '2017')
#doi17a is then filtered again for the variable DOI...yes.or.no equal to yes and nrow is used to count the resulting filtered rows.
doi17b <-nrow(filter(doi17a, DOI...yes.or.no =='Yes'))
#check doi17b is correct
#doi17b
cat("Print results -> Published datasets became a reportable scholarly activity in the annual Faculty Report of Professional Activities in 2014, and faculty reported", data17, "data sets in 2017 (up from", data14, "in 2014) with", doi17b," of these citations including Digital Object Identifiers (DOIs).")
library(ggstatsplot)
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
totaloa2017 <- nrow(CUBoulderOAArticles2017)
cat("From the data provided, it is only possible to get the total number of open access articles,", totaloa2017)
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAFund2013_2017.csv
CUBoulderOAFund2013_2017 <- data.frame(read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAFund2013_2017.csv'))
# Explore data by printing a summary of the spreadsheet. This tells us there are six variables, 116 rows and all variables are character strings
summary(CUBoulderOAFund2013_2017)
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Sample code to read in  files below and review the data Commented out because it doesn't need to run for the readme. For each file below the string can be updated for the file name
# data <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderPublishedData2014_2017.csv')
# Extract column (variable) names
# colnames(data)
# Print summary of each variable
# summary(data)
#library(tidyverse)
# Sample code to read in  files below and review the data Commented out because it doesn't need to run for the readme. For each file below the string can be updated for the file name
# data <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderPublishedData2014_2017.csv')
# Extract column (variable) names
# colnames(data)
# Print summary of each variable
# summary(data)
knitr::opts_chunk$set(echo = TRUE)
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017)
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017)
peroa2017 <- totaloa2017/5000
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017)
totaloa2017/5000
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017)
perctotal0a2017 <- totaloa2017/5000*1000
cat("The report indicated that CU Boulder publishes around 5000 papers annually. From that statement the percent of OA papers ->", perctotal0a2017)
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017,".  ")
perctotal0a2017 <- totaloa2017/5000*100
cat("The report indicated that CU Boulder publishes around 5000 papers annually. From that statement the percent of OA papers ->", perctotal0a2017, "%. ")
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017,".")
perctotal0a2017 <- totaloa2017/5000*100
cat("The report indicated that CU Boulder publishes around 5000 papers annually. From that statement the percent of OA papers ->", perctotal0a2017, "%. ")
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is only possible to get the total number of open access articles ->", totaloa2017,".")
perctotal0a2017 <- totaloa2017/5000*100
cat(" The report indicated that CU Boulder publishes around 5000 papers annually. From that statement the percent of OA papers ->", perctotal0a2017, "%. ")
# call Tidyverse library
library(tidyverse)
# Read in CUBoulderOAArticles2017.csv
CUBoulderOAArticles2017 <- read.csv('data/StateOfOpenCUBoulderData/CUBoulderOAArticles2017.csv')
# Each row is an Open Access article. Use nrow to count number of rows and assign to variable totaloa2017
totaloa2017 <- nrow(CUBoulderOAArticles2017)
# Write out results
cat("From the data provided, it is possible to get the total number of open access articles ->", totaloa2017,".")
perctotal0a2017 <- totaloa2017/5000*100
cat(" The report indicated that CU Boulder publishes around 5000 papers annually. From that statement the percent of OA papers ->", perctotal0a2017, "%. ")
